name: Release Obsidian Plugin

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Otherwise, you will fail to push refs to the destination repository

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"

      # Get the version number and set it to a variable
      - name: Get Version
        id: version
        run: |
          echo "::set-output name=tag::$(git describe --abbrev=0)"

      # Build the plugin
      - name: Build
        id: build
        run: |
          npm install
          npm run build --if-present

      # Package the required files into a zip archive
      - name: Package
        run: |
          mkdir ${{ github.event.repository.name }}
          if [ -f styles.css ]; then
            cp main.js manifest.json styles.css README.md ${{ github.event.repository.name }}
          else
            cp main.js manifest.json README.md ${{ github.event.repository.name }}
          fi
          zip -r ${{ github.event.repository.name }}.zip ${{ github.event.repository.name }}

      # Create the release on GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload the zip file
      - name: Upload zip file
        id: upload-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}.zip
          asset_content_type: application/zip

      # Upload the main.js file
      - name: Upload main.js
        id: upload-main
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.js
          asset_name: main.js
          asset_content_type: text/javascript

      # Upload the manifest.json file
      - name: Upload manifest.json
        id: upload-manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json

      - name: Check if styles.css exists
        id: check_file
        run: |
            if [ -f styles.css ]; then
            echo "::set-output name=file_exists::true"
            else  
            echo "::set-output name=file_exists::false"
            fi

      # Upload the CSS file if it exists
      - name: Upload styles.css
        if: steps.check_file.outputs.file_exists == 'true'
        id: upload-css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./styles.css
          asset_name: styles.css
          asset_content_type: text/css
